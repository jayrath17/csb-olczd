{"version":3,"sources":["StateProvider.js","firebase.js","Header.js","Product.js","Home.js","Orders.js","reducer.js","Subtotal.js","CheckoutProduct.js","Checkout.js","Login.js","axios.js","Payment.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","Header","basket","user","className","to","src","type","onClick","signOut","currentUser","email","toString","length","Product","title","image","price","rating","id","dispatch","Array","fill","map","_","i","item","Home","Orders","getBasketTotal","reduce","amount","state","action","index","findIndex","basketItem","newBasket","splice","console","warn","Subtotal","history","useHistory","renderText","deciamlScale","displayType","thousandSeperator","prefix","e","push","CheckoutProduct","Checkout","Login","useState","setEmail","password","setPassword","onChange","target","preventDefault","signInWithEmailAndPassword","then","catch","error","alert","message","createUserWithEmailAndPassword","instance","axios","create","baseURL","Payment","elements","useElements","setError","disabled","setDisabled","succeeded","setSucceeded","processing","setProcessing","stripe","useStripe","clientSecret","setClientSecret","useEffect","a","method","url","response","data","getClientSeceret","log","handleSubmit","event","collection","doc","set","replace","confirmCardPayment","payment_method","card","getElement","CardElement","paymentIntent","onSubmit","empty","decimalScale","thousandSeparator","promise","loadStripe","App","onAuthStateChanged","authUser","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35bff3ff.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer} from \"react\";\n\n//Prepare the Data Layer\nexport const StateContext = createContext();\n\n\n\n// wrap our app and provide the Data Layer to all conponent\nexport const StateProvider  = ({reducer , initialState, children}\n) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}> {children}</StateContext.Provider>\n);\n\n\n//Pull informationn from the data layer\nexport const useStateValue = ()=> useContext(StateContext);\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAMHonUirQuEtWps6OS6gNG2oFbf5f1s6c\",\n    authDomain: \"clone-b8fd4.firebaseapp.com\",\n    databaseURL: \"https://clone-b8fd4.firebaseio.com\",\n    projectId: \"clone-b8fd4\",\n    storageBucket: \"clone-b8fd4.appspot.com\",\n    messagingSenderId: \"79522948667\",\n    appId: \"1:79522948667:web:33403d1338acedbdd51e1e\",\n    measurementId: \"G-TG6EF0T866\"\n};\n\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\n\nconst db = firebase.firestore();\nconst auth = firebase.auth();\n\n\n\nexport {db, auth};\n\n","import React from \"react\";\nimport './Header.css'\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\"\nimport {Link} from \"react-router-dom\";\nimport {useStateValue} from \"./StateProvider\";\nimport {auth} from \"./firebase\";\n\n\nfunction Header() {\n    const [{basket, user}, dispatch] = useStateValue();\n\n    const nameChanging = () =>{\n        if(auth.currentUser){\n            return auth.currentUser.email.toString();\n        }\n        else{\n            return \"Guest\";\n        }\n    }\n\n    const handleAuthentiation = () =>{\n        if(user){\n            auth.signOut();\n        }\n    }\n\n\n\n\n    return(\n        <div className={'header'}>\n            <Link to={\"/\"}>\n                <img className={\"header_logo\"} src={\"http://pngimg.com/uploads/amazon/amazon_PNG11.png\"} />\n\n            </Link>\n\n            {/*Amazon Logo  */}\n\n\n            {/*Amazon Search bar  */}\n            <div className={\"header_search\"}>\n                <input className={\"header_SearchInput\"} type={\"text\"}/>\n                <SearchIcon className={\"header_searchIcon\"}>\n\n                </SearchIcon>\n            </div>\n\n            {/*Amazon navigation four buttons  */}\n\n            <div className={\"header_nav\"}>\n                <Link to={!user && '/login'}>\n                <div className={\"header_options\"} onClick={handleAuthentiation}>\n\n                    <span className={\"header_optionLineOne\"}>\n                        Hello {nameChanging()}\n\n                    </span>\n                    <span className={\"header_optionLineTwo\"}>\n                            {user ? \"Sign Out\" : \"Sign In\"}\n\n                    </span>\n\n\n                </div>\n                </Link>\n\n\n                <div className={\"header_options\"}>\n                    <span className={\"header_optionLineOne\"}>\n                        Returns\n                    </span>\n                    <span className={\"header_optionLineTwo\"}>\n                        & Orders\n                    </span>\n                </div>\n\n\n                <div className={\"header_options\"}>\n                    <span className={\"header_optionLineOne\"}>\n                        Your\n                    </span>\n                    <span className={\"header_optionLineTwo\"}>\n                        Prime\n                    </span>\n                </div>\n\n            </div>\n\n\n            <Link to={\"/Checkout\"}>\n\n            <div className={\"header_optionBasket\"}>\n                <ShoppingBasketIcon />\n                <span className={\"header_optionLineTwo header_basketCount\"}>\n                    {basket?.length}\n\n\n                </span>\n\n            </div>\n\n            </Link>\n\n\n\n\n\n        </div>\n    )\n\n}\n\n\n\nexport default Header\n","import React from \"react\";\nimport \"./Product.css\";\nimport {useStateValue} from \"./StateProvider\";\n\n\n\nfunction Product({title, image,  price, rating,  id}) {\n\n    const [state, dispatch] = useStateValue();\n\n\n    const addToBasket = () => {\n        //dispatch the item into the data layer\n        dispatch({\n            type : \"ADD_TO_BASKET\",\n            item : {\n                id : id,\n                title: title,\n                image: image,\n                price: price,\n                rating: rating,\n\n            },\n        });\n\n\n\n    };\n\n\n\n    return(\n        <div className={\"product\"}>\n            <div className={\"product_info\"}>\n                <p>{title}</p>\n                <div className={\"product_price\"}>\n                    <small>$</small>\n                    <strong>{price}</strong>\n                </div>\n\n\n\n                <div className={\"product_rating\"}>\n                    {Array(rating).fill().map((_ , i) => (\n                        <p>&#11088;</p>\n\n                    ))}\n\n                </div>\n            </div>\n\n            <img src={image} />\n\n            <button onClick={addToBasket}>Add to Basket</button>\n\n\n\n        </div>\n    )\n\n}\n\n\nexport default Product;\n","import React from \"react\";\nimport \"./Home.css\";\nimport Product from \"./Product\";\n\n\nfunction Home() {\n    return(\n        <div className={\"home\"}>\n            <div className={\"home_container\"}>\n\n                <div className={\"home_row\"}>\n                    {/* Product */}\n\n                    <Product title={\"The lean startup\"}\n                            price={29.99}\n                            image={\"https://images-na.ssl-images-amazon.com/images/I/81-QB7nDh4L.jpg\"}\n                            rating={3}\n                            id = {2}/>\n\n\n\n                    {/* Product */}\n\n                    <Product title={\"Oppo 9\"}\n                             price={299.99}\n                             image={\"https://www.clipartkey.com/mpngs/m/234-2346583_smartphones-png-combo-new-mobile-phone-png.png\"}\n                             rating={4}\n                             id = {3}/>\n\n                </div>\n\n\n\n                <div className={\"home_row\"}>\n                    {/* Product */}\n                    <Product title={\"Roses Bouqet\"}\n                             price={2.20}\n                             image={\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTXiAmEDjC_iEFaKNbFwt9MZfwxzCd4dW-2Xw&usqp=CAU\"}\n                             rating={5}\n                             id = {4}/>\n                    {/* Product */}\n\n                        {/* Product */}\n                        <Product title={\"Predator Asus 8GB RAM/ 4GB Graphic Card/ 2TB HardDisk/ Windows 10/ Gaming Laptop\"}\n                                 price={300.10}\n                                 image={\"https://static.acer.com/up/Resource/Acer/Predator/Homepage/Featured_Products/20200609/Predator-Helios-700-PH717-71-preview.png\"}\n                                 rating={4}\n                                 id = {5}/>\n                    {/* Product */}\n\n                        <Product title={\"Cracking the Coding Interview\"}\n                                 price={50.5}\n                                 image={\"https://www.codewithc.com/wp-content/uploads/2017/08/Free-Download-Cracking-the-Coding-Interview.png\"}\n                                 rating={5}\n                                 id = {6}/>\n\n\n                </div>\n\n\n                <div className={\"home_row\"}>\n                    {/* Product */}\n                    <Product title={\"Samsung Curved LED Tv \"}\n                             price={500.5}\n                             image={\"https://5.imimg.com/data5/TV/PP/MY-18139975/223-7cm-2888-29-suhd-4k-curved-smart-tv-js9500-series-9-500x500.png\"}\n                             rating={4}\n                             id = {7}/>\n\n\n                </div>\n                </div>\n\n            </div>\n\n\n\n\n\n\n    )\n\n}\n\nexport default Home;\n\n","import React from \"react\";\nimport \"./Orders.css\";\n\nfunction Orders() {\n    return (\n        <div className={\"orders\"}>\n            <h1>Order Successful</h1>\n\n        </div>\n    )\n\n}\n\nexport default Orders;\n","export const initalState = {\n    basket: [],\n    user: null\n};\n\n\n\nexport const getBasketTotal = (basket) =>\n    basket?.reduce((amount , item) => item.price + amount, 0);\n\n\n\n\n\n\nconst reducer = (state, action) => {\n\n    switch(action.type){\n        case \"ADD_TO_BASKET\":\n            return{\n                ...state,\n                basket: [...state.basket, action.item],\n            };\n\n\n        case \"EMPTY_BASKET\":\n            return {\n                ...state,\n                basket: []\n            }\n\n\n        case \"REMOVE_FROM_BASKET\":\n\n\n            const index = state.basket.findIndex(\n                (basketItem) => basketItem.id === action.id\n            )\n\n\n            let newBasket = [...state.basket];\n\n            if(index>= 0){\n                newBasket.splice(index, 1);\n\n\n            }\n            else{\n                console.warn(\"cant remove product\")\n            }\n            return {\n                ...state,\n                basket: newBasket\n            }\n\n\n        case \"SET_USER\":\n            return {\n                ...state,\n\n                user: action.user\n\n            }\n\n\n\n\n\n\n        default:\n            return state;\n\n    }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport \"./Subtotal.css\";\nimport CurrencyForamt from \"react-currency-format\";\nimport {useStateValue} from \"./StateProvider\";\nimport {getBasketTotal} from \"./reducer\";\nimport {useHistory} from \"react-router-dom\";\n\n\nfunction Subtotal() {\n    const history = useHistory();\n    const [{basket}, dispatch] = useStateValue();\n\n\n    return(\n        <div className=\"subtotal\">\n            <CurrencyForamt renderText={(value) => (\n                <>\n                <p>\n                    Subtotal ({basket?.length} items):\n                    <strong>{value}</strong>\n\n\n\n                </p>\n\n                <small className=\"subtotal_gift\">\n                    <input type=\"checkbox\" /> This order contains a gift\n\n                </small>\n                </>\n\n\n            )}\n                deciamlScale = {2}\n                value = {getBasketTotal(basket)}\n                displayType = {\"text\"}\n                thousandSeperator = {true}\n                prefix = {\"$\"}/>\n\n\n\n                <button onClick={e => history.push(\"/payment\")}>Proceed to Checkout</button>\n\n\n        </div>\n    );\n\n}\n\n\nexport default Subtotal;\n","import React from \"react\";\nimport \"./CheckoutProduct.css\"\nimport {useStateValue} from \"./StateProvider\";\n\n\nfunction CheckoutProduct({id, price, title, image, rating}) {\n\n    const [{basket}, dispatch] = useStateValue();\n\n    const removeFromBasket = () =>{\n        //Remove items from the basket\n\n        dispatch({\n            type: 'REMOVE_FROM_BASKET',\n            id: id,\n        })\n\n\n    }\n\n    return (\n        <div className={\"checkoutProduct\"}>\n            <img className={\"checkoutProduct_image\"} src={image} />\n\n            <div className={\"checkoutProduct_info\"}>\n\n                <p className={\"checkoutProduct_title\"}>{title}</p>\n\n\n                <p className={\"checkoutProduct_price\"}>\n                    <small>$</small>\n                    <strong>{price}</strong>\n                </p>\n\n\n                <div className={\"checkoutProduct_rating\"}>\n                    {Array(rating).fill().map((_ , i) => (\n                        <p>&#11088;</p>\n                    ))}\n                </div>\n\n                <button onClick={removeFromBasket}>Remove From Basket</button>\n\n\n            </div>\n\n        </div>\n    )\n\n}\n\n\nexport default CheckoutProduct;\n","import React from \"react\";\nimport \"./Checkout.css\";\nimport Subtotal from \"./Subtotal\";\nimport {useStateValue} from \"./StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\n\nfunction Checkout() {\n    const [{basket}, dispatch] = useStateValue();\n    return(\n\n    <div className={\"checkout\"}>\n\n\n        <div className={\"checkout_left\"}>\n            <div className={\"checkout_ad\"}></div>\n            <div className={\"checkout_title\"}>\n                <h2>Your Shopping Basket</h2>\n\n\n\n            </div>\n            {basket.map(item => (\n                <CheckoutProduct\n\n                    id={item.id}\n                    title={item.title}\n                    price={item.price}\n                    image={item.image}\n                    rating={item.rating}\n                />\n\n\n\n\n            ))}\n        </div>\n\n\n        <div className={\"checkout_right\"}>\n            <Subtotal/>\n\n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n    </div>\n\n    )\n\n}\n\nexport default Checkout;\n","import React, {useState} from \"react\";\nimport \"./Login.css\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {auth} from \"./firebase\";\n\nfunction Login() {\n\n    const history = useHistory();\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const signIn =e => {\n        e.preventDefault();\n\n        //firebase login will go here\n\n        auth.signInWithEmailAndPassword(email, password)\n            .then((auth) => {\n                if(auth){\n                    history.push(\"/\")\n\n                }\n            })\n            .catch(error => alert(error.message));\n\n    }\n\n    const register = e => {\n        e.preventDefault();\n        auth\n\n            .createUserWithEmailAndPassword(email, password)\n            .then((auth) => {\n                if(auth){\n                    history.push(\"/\")\n\n                }\n            })\n            .catch(error => alert(error.message));\n\n        //firebase register\n    }\n\n\n    return(\n        <div className={'login'}>\n            <Link to={\"/\"}>\n            <img src = \"https://1000logos.net/wp-content/uploads/2016/10/Amazon-Logo.png\" className={\"login_logo\"} />\n            </Link>\n\n\n\n            <div className={\"login_container\"}>\n                <h1>Sign-in</h1>\n                <form>\n                    <h5>E-mail</h5>\n                    <input type={\"text\"} value={email} onChange={e=> setEmail(e.target.value)}/>\n\n\n                    <h5>Passwoord</h5>\n                    <input type={\"password\"} value={password} onChange={e => setPassword(e.target.value)}/>\n\n                    <button className={\"login_signInButton\"} type={\"submit\"} onClick={signIn}>Sign in</button>\n                    <p>\n                        By signing-in ou agree to the Amazom fake clone Conditions of Use and Sale. Please see our Privacy Notice, our Cookies Notice and our Intrest-Based Ads Notice\n                    </p>\n\n                    <button className={\"login_registerButton\"} onClick={register}>Create your Amazon Account</button>\n\n\n                </form>\n            </div>\n\n\n\n\n\n        </div>\n    )\n\n}\n\n\n\nexport default Login;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:5001/clone-b8fd4/us-central1/api' //API URL (CLOUD FUNCTION)\n});\n\nexport default instance;\n\n","import React, {useEffect, useState} from \"react\";\nimport {useStateValue} from \"./StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport './Payment.css';\nimport {Link, useHistory} from \"react-router-dom\";\nimport {CardElement, useElements, useStripe} from \"@stripe/react-stripe-js\";\nimport {getBasketTotal} from \"./reducer\";\nimport CurrencyFormat from \"react-currency-format\";\nimport axios from \"./axios\";\nimport {db} from \"./firebase\";\n\n\n\n\nfunction Payment() {\n\n    const [{basket, user}, dispatch] = useStateValue();\n    const elements = useElements();\n    const [error, setError] = useState(null);\n    const [disabled, setDisabled] = useState(true);\n\n    const [succeeded, setSucceeded] = useState(false);\n    const [processing, setProcessing] = useState(\"\")\n\n    const history = useHistory();\n\n    const stripe = useStripe();\n\n    const [clientSecret, setClientSecret] = useState(true);\n\n    useEffect(() => {\n         const getClientSeceret = async () =>{\n            const response = await axios({\n                method: 'post',\n                //Stripe expects the total in a currency subunits\n\n                url: '/payments/create?total=${getBasketTotal(basket) * 100}'\n            });;\n\n            setClientSecret(response.data.clientSecret);\n\n        }\n\n\n\n        getClientSeceret();\n    }, [basket])\n\n\n    console.log('The secret is ', clientSecret);\n\n\n\n\n    const handleSubmit = async (event) => {\n        //When clicked submite\n        event.preventDefault();\n        setProcessing(true);\n\n        db\n            .collection('users')\n            .doc(\"user?.uid\")\n            .collection('orders')\n            .doc(\"basket.id\")\n            .set({\n                basket: basket,\n            })\n\n\n        history.replace(\"/orders\")\n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        }).then(({paymentIntent}) => {\n            //paymentIntent = payment confirmation\n\n            setSucceeded(true);\n            setError(null)\n            setProcessing(false)\n\n            dispatch({\n                type: \"EMPTY_BASKET\"\n            })\n\n\n\n\n\n        })\n\n\n    }\n\n    const handleChange =event =>{\n\n        setDisabled(event.empty);\n        setError(event.error? event.error.message : \"\");\n\n\n\n\n    }\n\n\n    return(\n        <div className={'payment'}>\n            <div className={\"payment_container\"}>\n                <h1>\n                    Checkout(\n                    <Link to={\"/checkout\"}>{basket?.length} items</Link>\n                    )\n                </h1>\n\n\n                <div className={\"payment_section\"}>\n\n                    <div className={\"payment_title\"}>\n                        <h3>Delivery Address</h3>\n\n                    </div>\n                    <div className={\"payment_address\"}>\n                        <p>{user?.email}</p>\n                        <p>123 React Lane</p>\n                        <p>Los Anglles , CA</p>\n                    </div>\n\n\n                </div>\n\n                <div className={\"payment_section\"}>\n                    <div className={\"payment_title\"}>\n                        <h3>Review items and delivery</h3>\n\n                    </div>\n                    <div className={\"payment_items\"}>\n                        {/* Product*/}\n                        {basket.map(item =>(\n                            <CheckoutProduct\n                            id ={item.id}\n                            title ={item.title}\n                            image={item.image}\n                            price={item.price}\n                            rating={item.rating}\n\n                            />\n                        ))}\n\n                    </div>\n\n\n\n                </div>\n\n                <div className={\"payment_section\"}>\n                    <div className={\"payment_title\"}>\n                        <h3>Payment Method</h3>\n\n                    </div>\n\n                    <div className={\"payment_details\"}>\n                        {/* Stripe payment thing   */}\n\n\n                        <form onSubmit={handleSubmit}>\n                            <CardElement onChange={handleChange}/>\n                            <div className={\"payment_priceContainer\"}>\n\n                                <CurrencyFormat renderText={(value) => (\n                                    <>\n                                    <h3>Order Total: {value}</h3>\n                                    </>\n                                )}\n                                                decimalScale={2}\n                                                value={getBasketTotal(basket)}\n                                                displayType={\"text\"}\n                                                thousandSeparator={true}\n                                                prefix={\"$\"}\n                                                />\n\n\n\n                                <button disabled={processing || disabled || succeeded}>\n\n                                    <span>\n                                        {\n                                            processing? <p>Processinng</p>:\n                                                \"Buy Now\"\n                                        }\n                                    </span>\n\n\n                                </button>\n\n                            </div>\n\n                            {error && <div>{error}</div>}\n\n                        </form>\n\n\n\n                    </div>\n\n\n                </div>\n\n\n            </div>\n        </div>\n    )\n\n}\n\n\nexport default Payment;\n","import React, {useEffect} from 'react';\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nimport Orders from './Orders';\n\nimport './App.css';\nimport Checkout from \"./Checkout\";\nimport Login from \"./Login\";\nimport {auth} from \"./firebase\";\nimport {useStateValue} from \"./StateProvider\";\nimport Payment from \"./Payment\";\n\nimport {loadStripe} from \"@stripe/stripe-js\";\nimport {Elements} from \"@stripe/react-stripe-js\";\n\n\nconst promise = loadStripe(\n    \"pk_test_51HRP4KAhBXtrqZH7Mp879b0UmkfBKQlcBwbBkH1CVwYcPyzYqTjkVxqvEBcKXQi8Sqp8ZIsKxg7CE1BTDridJ9WS00kIcFsYpm\"\n);\n\n\n\nfunction App() {\n\n    const [{}, dispatch] = useStateValue();\n\n\n    useEffect(() =>{\n        //will only runs one when tthe app components loads....\n\n        auth.onAuthStateChanged(authUser => {\n            console.log(\"USER IS \", authUser);\n\n            if(authUser){\n                //User just logged or user was logged in\n\n                dispatch({\n                    type :'SET_USER',\n                    user: authUser\n                })\n\n            }\n            else{\n                //user is logged out\n\n                dispatch({\n                    type : 'SET_USER',\n                    user : null\n                })\n            }\n        })\n\n\n\n    }, [])\n\n\n\n  return (\n      <Router>\n    <div className=\"App\">\n\n        <Switch>\n\n            <Route path={\"/orders\"}>\n                <Header />\n                <Orders />\n\n            </Route>\n\n\n\n            <Route path={\"/login\"}>\n                <Login />\n\n            </Route>\n\n            <Route path=\"/checkout\">\n                <Header />\n\n                <Checkout/>\n            </Route>\n\n            <Route path=\"/payment\">\n                <Header />\n                <Elements stripe ={promise}>\n                    <Payment/>\n                </Elements>\n\n            </Route>\n\n            <Route path=\"/\">\n                <Header />\n\n                <Home />\n            </Route>\n\n        </Switch>\n\n\n\n\n    </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {StateProvider} from \"./StateProvider\";\nimport reducer, {initalState} from \"./reducer\";\n\nReactDOM.render(\n\n  <React.StrictMode>\n\n      <StateProvider initialState={initalState} reducer={reducer}>\n\n\n    <App />\n      </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}